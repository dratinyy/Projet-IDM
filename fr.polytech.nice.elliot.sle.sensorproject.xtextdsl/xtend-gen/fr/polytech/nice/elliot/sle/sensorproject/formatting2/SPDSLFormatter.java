/**
 * generated by Xtext 2.14.0
 */
package fr.polytech.nice.elliot.sle.sensorproject.formatting2;

import com.google.inject.Inject;
import fr.polytech.nice.elliot.sle.sensorproject.services.SPDSLGrammarAccess;
import java.util.Arrays;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import sensorproject.Node;

@SuppressWarnings("all")
public class SPDSLFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private SPDSLGrammarAccess _sPDSLGrammarAccess;
  
  protected void _format(final sensorproject.System system, @Extension final IFormattableDocument document) {
    EList<Node> _nodes = system.getNodes();
    for (final Node node : _nodes) {
      document.<Node>format(node);
    }
  }
  
  public void format(final Object system, final IFormattableDocument document) {
    if (system instanceof XtextResource) {
      _format((XtextResource)system, document);
      return;
    } else if (system instanceof sensorproject.System) {
      _format((sensorproject.System)system, document);
      return;
    } else if (system instanceof EObject) {
      _format((EObject)system, document);
      return;
    } else if (system == null) {
      _format((Void)null, document);
      return;
    } else if (system != null) {
      _format(system, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(system, document).toString());
    }
  }
}
